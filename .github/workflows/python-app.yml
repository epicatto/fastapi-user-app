name: FastAPI sample application build

on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --deploy --dev
      - name: Lint with flake8
        run: pipenv run flake8
      - name: Run tests
        run: pipenv run pytest

  docker:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set docker image tag
        run: |
          echo ::set-env name=IMAGE_TAG::$(echo $GITHUB_REF | cut -d / -f 3)
          if [ -z "$IMAGE_TAG" ]; then
              echo ::set-env name=IMAGE_TAG::${{ github.sha }}
          fi
      - name: Build docker image & push to ECR
        uses: kciter/aws-ecr-action@v1
        with:
          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          region: ${{ secrets.AWS_REGION }}
          repo: ${{ secrets.ECR_NAME }}
          tags: ${{ env.IMAGE_TAG }}
          create_repo: false
      - name: Create TF file with image tag variable (used by remote backend)
        run: |
          git pull --ff-only
          echo 'img_tag = "'${{ env.IMAGE_TAG }}'"' > ./terraform/'tmp.auto.tfvars'
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update image tag"
          git push

  terraform:
    needs: [build, docker]
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    steps:
      - uses: actions/checkout@v2
      - name: Get updated tmp.auto.tfvars file content
        run: |
          git pull --ff-only
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Plan
        run: terraform plan
#      - name: Terraform Apply
#        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
#        run: terraform apply -auto-approve